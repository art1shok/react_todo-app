{"version":3,"sources":["Header.js","TodoList.js","Footer.js","App.js","index.js"],"names":["Header","_ref","submitForm","change","value","react_default","a","createElement","className","onSubmit","onChange","placeholder","TodoList","checkAll","filteredTodos","check","destroy","style","display","id","type","htmlFor","map","todo","completed","key","checked","e","text","onClick","Footer","props","allTodos","filter","setFilter","clearCompletedTodos","length","filterName","href","concat","split","letter","i","toUpperCase","join","some","App","state","todos","title","currentFilter","allCompleted","addTodo","_this","setState","myTodo","Date","Object","toConsumableArray","target","preventDefault","trim","persist","objectSpread2","prevState","_this$state","this","src_Header","src_TodoList","src_Footer","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d5bef495.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ submitForm, change, value }) => (\n  <header className=\"header\">\n    <h1>TODO APP</h1>\n    <form onSubmit={submitForm}>\n      <input\n        onChange={change}\n        value={value}\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n      />\n    </form>\n  </header>\n);\n\nHeader.propTypes = {\n  submitForm: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ checkAll, filteredTodos, check, destroy }) => (\n  <section className=\"main\" style={{ display: 'block' }}>\n    <input\n      onChange={checkAll}\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      type=\"checkbox\"\n    />\n    {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <ul className=\"todo-list\">\n      { filteredTodos.map(todo => (\n        <li className={todo.completed ? 'completed' : ''} key={todo.id}>\n          <div className=\"view\">\n            <input\n              id={todo.id}\n              className=\"toggle\"\n              type=\"checkbox\"\n              checked={todo.completed}\n              onChange={e => check(e, todo.id)}\n            />\n            <label htmlFor={todo.id}>{todo.text}</label>\n            {/* eslint-disable-next-line react/button-has-type */}\n            <button\n              className=\"destroy\"\n              onClick={\n                () => destroy(todo.id)\n              }\n            />\n          </div>\n        </li>\n      ))\n      }\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  checkAll: PropTypes.func.isRequired,\n  filteredTodos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  check: PropTypes.func.isRequired,\n  destroy: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = (props) => {\n  const { allTodos, filter, setFilter, clearCompletedTodos } = props;\n  const filterNames = ['all', 'active', 'completed'];\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {allTodos.filter(todo => !todo.completed)\n          .length}\n        {' '}\n        items left\n      </span>\n\n      <ul className=\"filters\">\n        {filterNames.map(filterName => (\n          <li>\n            <a\n              href={`#/${filterName}`}\n              onClick={() => setFilter(filterName)}\n              className={filter === filterName ? 'selected' : ''}\n            >\n              {filterName\n                .split('')\n                .map((letter, i) => (i === 0 ? letter.toUpperCase() : letter))\n                .join('')}\n            </a>\n          </li>\n        ))}\n      </ul>\n\n      {allTodos.some(todo => todo.completed) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={clearCompletedTodos}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  allTodos: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  clearCompletedTodos: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './Header';\nimport TodoList from './TodoList';\nimport Footer from './Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    title: '',\n    currentFilter: 'all',\n    // eslint-disable-next-line react/no-unused-state\n    allCompleted: false,\n  };\n\n  addTodo = (text) => {\n    this.setState((state) => {\n      const myTodo = (\n        {\n          text,\n          completed: false,\n          id: +(new Date()),\n        }\n      );\n\n      return { todos: [...state.todos, myTodo] };\n    });\n  };\n\n  change = (e) => {\n    this.setState({\n      title: e.target.value,\n    });\n  };\n\n  submitForm = (e) => {\n    e.preventDefault();\n    if (!this.state.title || this.state\n      .title.trim() === '') {\n      return;\n    }\n\n    this.addTodo(this.state.title);\n    this.setState({ title: '' });\n  };\n\n  destroy = (id) => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.id !== id),\n    }));\n  };\n\n  check = (e, id) => {\n    e.persist();\n\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: e.target.checked,\n        };\n      }),\n    }));\n  };\n\n  checkAll = () => {\n    this.setState(({ todos, allCompleted }) => ({\n      // eslint-disable-next-line react/no-unused-state\n      allCompleted: !allCompleted,\n      todos: todos.map(todo => ({\n        ...todo, completed: !allCompleted,\n      })),\n    }));\n  };\n\n  setFilter = (filter) => {\n    this.setState(prevState => ({ currentFilter: filter }));\n  };\n\n  filteredTodos = () => {\n    switch (this.state.currentFilter) {\n      case 'Completed': return this.state.todos.filter(todo => todo.completed);\n      case 'Active': return this.state.todos.filter(todo => !todo.completed);\n      case 'All':\n      default: return this.state.todos;\n    }\n  };\n\n  clearCompletedTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  };\n\n  render() {\n    const { todos, title, currentFilter } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <Header\n          submitForm={this.submitForm}\n          change={this.change}\n          value={title}\n        />\n        <TodoList\n          checkAll={this.checkAll}\n          filteredTodos={this.filteredTodos()}\n          check={this.check}\n          destroy={this.destroy}\n        />\n        {\n          todos.length > 0 && (\n            <Footer\n              allTodos={todos}\n              filter={currentFilter}\n              setFilter={this.setFilter}\n              clearCompletedTodos={this.clearCompletedTodos}\n            />\n          )\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}